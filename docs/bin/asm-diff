
tiny32:     file format elf32-i386			      |	tiny64:     file format elf64-x86-64


Disassembly of section .init:					Disassembly of section .init:

00001000 <_init>:					      |	0000000000001000 <_init>:
    1000:	f3 0f 1e fb          	endbr32 	      |	    1000:	f3 0f 1e fa          	endbr64 
    1004:	53                   	push   ebx	      |	    1004:	48 83 ec 08          	sub    rsp,0x8
    1005:	83 ec 08             	sub    esp,0x8	      |	    1008:	48 8b 05 d9 2f 00 00 	mov    rax,QWORD PTR 
    1008:	e8 83 00 00 00       	call   1090 <__x86.ge |	    100f:	48 85 c0             	test   rax,rax
    100d:	81 c3 cf 2f 00 00    	add    ebx,0x2fcf     |	    1012:	74 02                	je     1016 <_init+0x
    1013:	8b 83 18 00 00 00    	mov    eax,DWORD PTR  |	    1014:	ff d0                	call   rax
    1019:	85 c0                	test   eax,eax	      |	    1016:	48 83 c4 08          	add    rsp,0x8
    101b:	74 02                	je     101f <_init+0x |	    101a:	c3                   	ret    
    101d:	ff d0                	call   eax	      <
    101f:	83 c4 08             	add    esp,0x8	      <
    1022:	5b                   	pop    ebx	      <
    1023:	c3                   	ret    		      <

Disassembly of section .plt:					Disassembly of section .plt:

00001030 <__libc_start_main@plt-0x10>:			      |	0000000000001020 <.plt>:
    1030:	ff b3 04 00 00 00    	push   DWORD PTR [ebx |	    1020:	ff 35 a2 2f 00 00    	push   QWORD PTR [rip
    1036:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx |	    1026:	f2 ff 25 a3 2f 00 00 	bnd jmp QWORD PTR [ri
    103c:	00 00                	add    BYTE PTR [eax] |	    102d:	0f 1f 00             	nop    DWORD PTR [rax
	...						      <
							      <
00001040 <__libc_start_main@plt>:			      <
    1040:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx <
    1046:	68 00 00 00 00       	push   0x0	      <
    104b:	e9 e0 ff ff ff       	jmp    1030 <_init+0x <

Disassembly of section .plt.got:				Disassembly of section .plt.got:

00001050 <__cxa_finalize@plt>:				      |	0000000000001030 <__cxa_finalize@plt>:
    1050:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx |	    1030:	f3 0f 1e fa          	endbr64 
    1056:	66 90                	xchg   ax,ax	      |	    1034:	f2 ff 25 bd 2f 00 00 	bnd jmp QWORD PTR [ri
							      >	    103b:	0f 1f 44 00 00       	nop    DWORD PTR [rax

Disassembly of section .text:					Disassembly of section .text:

00001060 <_start>:					      |	0000000000001040 <_start>:
    1060:	f3 0f 1e fb          	endbr32 	      |	    1040:	f3 0f 1e fa          	endbr64 
    1064:	31 ed                	xor    ebp,ebp	      |	    1044:	31 ed                	xor    ebp,ebp
    1066:	5e                   	pop    esi	      |	    1046:	49 89 d1             	mov    r9,rdx
    1067:	89 e1                	mov    ecx,esp	      |	    1049:	5e                   	pop    rsi
    1069:	83 e4 f0             	and    esp,0xfffffff0 |	    104a:	48 89 e2             	mov    rdx,rsp
    106c:	50                   	push   eax	      |	    104d:	48 83 e4 f0          	and    rsp,0xffffffff
    106d:	54                   	push   esp	      |	    1051:	50                   	push   rax
    106e:	52                   	push   edx	      |	    1052:	54                   	push   rsp
    106f:	e8 18 00 00 00       	call   108c <_start+0 |	    1053:	45 31 c0             	xor    r8d,r8d
    1074:	81 c3 68 2f 00 00    	add    ebx,0x2f68     |	    1056:	31 c9                	xor    ecx,ecx
    107a:	6a 00                	push   0x0	      |	    1058:	48 8d 3d ca 00 00 00 	lea    rdi,[rip+0xca]
    107c:	6a 00                	push   0x0	      |	    105f:	ff 15 73 2f 00 00    	call   QWORD PTR [rip
    107e:	51                   	push   ecx	      |	    1065:	f4                   	hlt    
    107f:	56                   	push   esi	      |	    1066:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+
    1080:	ff b3 1c 00 00 00    	push   DWORD PTR [ebx |	    106d:	00 00 00 
    1086:	e8 b5 ff ff ff       	call   1040 <__libc_s |
    108b:	f4                   	hlt    		      |	0000000000001070 <deregister_tm_clones>:
    108c:	8b 1c 24             	mov    ebx,DWORD PTR  |	    1070:	48 8d 3d 99 2f 00 00 	lea    rdi,[rip+0x2f9
    108f:	c3                   	ret    		      |	    1077:	48 8d 05 92 2f 00 00 	lea    rax,[rip+0x2f9
							      |	    107e:	48 39 f8             	cmp    rax,rdi
00001090 <__x86.get_pc_thunk.bx>:			      |	    1081:	74 15                	je     1098 <deregist
    1090:	8b 1c 24             	mov    ebx,DWORD PTR  |	    1083:	48 8b 05 56 2f 00 00 	mov    rax,QWORD PTR 
    1093:	c3                   	ret    		      |	    108a:	48 85 c0             	test   rax,rax
    1094:	66 90                	xchg   ax,ax	      |	    108d:	74 09                	je     1098 <deregist
    1096:	66 90                	xchg   ax,ax	      |	    108f:	ff e0                	jmp    rax
    1098:	66 90                	xchg   ax,ax	      |	    1091:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax
    109a:	66 90                	xchg   ax,ax	      |	    1098:	c3                   	ret    
    109c:	66 90                	xchg   ax,ax	      |	    1099:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax
    109e:	66 90                	xchg   ax,ax	      |
							      |	00000000000010a0 <register_tm_clones>:
000010a0 <deregister_tm_clones>:			      |	    10a0:	48 8d 3d 69 2f 00 00 	lea    rdi,[rip+0x2f6
    10a0:	e8 e4 00 00 00       	call   1189 <__x86.ge |	    10a7:	48 8d 35 62 2f 00 00 	lea    rsi,[rip+0x2f6
    10a5:	81 c2 37 2f 00 00    	add    edx,0x2f37     |	    10ae:	48 29 fe             	sub    rsi,rdi
    10ab:	8d 8a 2c 00 00 00    	lea    ecx,[edx+0x2c] |	    10b1:	48 89 f0             	mov    rax,rsi
    10b1:	8d 82 2c 00 00 00    	lea    eax,[edx+0x2c] |	    10b4:	48 c1 ee 3f          	shr    rsi,0x3f
    10b7:	39 c8                	cmp    eax,ecx	      |	    10b8:	48 c1 f8 03          	sar    rax,0x3
    10b9:	74 1d                	je     10d8 <deregist |	    10bc:	48 01 c6             	add    rsi,rax
    10bb:	8b 82 10 00 00 00    	mov    eax,DWORD PTR  |	    10bf:	48 d1 fe             	sar    rsi,1
    10c1:	85 c0                	test   eax,eax	      |	    10c2:	74 14                	je     10d8 <register
    10c3:	74 13                	je     10d8 <deregist |	    10c4:	48 8b 05 25 2f 00 00 	mov    rax,QWORD PTR 
    10c5:	55                   	push   ebp	      |	    10cb:	48 85 c0             	test   rax,rax
    10c6:	89 e5                	mov    ebp,esp	      |	    10ce:	74 08                	je     10d8 <register
    10c8:	83 ec 14             	sub    esp,0x14	      |	    10d0:	ff e0                	jmp    rax
    10cb:	51                   	push   ecx	      |	    10d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+
    10cc:	ff d0                	call   eax	      <
    10ce:	83 c4 10             	add    esp,0x10	      <
    10d1:	c9                   	leave  		      <
    10d2:	c3                   	ret    		      <
    10d3:	8d 74 26 00          	lea    esi,[esi+eiz*1 <
    10d7:	90                   	nop		      <
    10d8:	c3                   	ret    			    10d8:	c3                   	ret    
    10d9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1 |	    10d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax

000010e0 <register_tm_clones>:				      |	00000000000010e0 <__do_global_dtors_aux>:
    10e0:	e8 a4 00 00 00       	call   1189 <__x86.ge |	    10e0:	f3 0f 1e fa          	endbr64 
    10e5:	81 c2 f7 2e 00 00    	add    edx,0x2ef7     |	    10e4:	80 3d 25 2f 00 00 00 	cmp    BYTE PTR [rip+
    10eb:	55                   	push   ebp	      |	    10eb:	75 2b                	jne    1118 <__do_glo
    10ec:	89 e5                	mov    ebp,esp	      |	    10ed:	55                   	push   rbp
    10ee:	53                   	push   ebx	      |	    10ee:	48 83 3d 02 2f 00 00 	cmp    QWORD PTR [rip
    10ef:	8d 8a 2c 00 00 00    	lea    ecx,[edx+0x2c] |	    10f5:	00 
    10f5:	8d 82 2c 00 00 00    	lea    eax,[edx+0x2c] |	    10f6:	48 89 e5             	mov    rbp,rsp
    10fb:	83 ec 04             	sub    esp,0x4	      |	    10f9:	74 0c                	je     1107 <__do_glo
    10fe:	29 c8                	sub    eax,ecx	      |	    10fb:	48 8b 3d 06 2f 00 00 	mov    rdi,QWORD PTR 
    1100:	89 c3                	mov    ebx,eax	      |	    1102:	e8 29 ff ff ff       	call   1030 <__cxa_fi
    1102:	c1 e8 1f             	shr    eax,0x1f	      |	    1107:	e8 64 ff ff ff       	call   1070 <deregist
    1105:	c1 fb 02             	sar    ebx,0x2	      |	    110c:	c6 05 fd 2e 00 00 01 	mov    BYTE PTR [rip+
    1108:	01 d8                	add    eax,ebx	      |	    1113:	5d                   	pop    rbp
    110a:	d1 f8                	sar    eax,1	      |	    1114:	c3                   	ret    
    110c:	74 14                	je     1122 <register |	    1115:	0f 1f 00             	nop    DWORD PTR [rax
    110e:	8b 92 20 00 00 00    	mov    edx,DWORD PTR  |	    1118:	c3                   	ret    
    1114:	85 d2                	test   edx,edx	      |	    1119:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax
    1116:	74 0a                	je     1122 <register |
    1118:	83 ec 08             	sub    esp,0x8	      |	0000000000001120 <frame_dummy>:
    111b:	50                   	push   eax	      |	    1120:	f3 0f 1e fa          	endbr64 
    111c:	51                   	push   ecx	      |	    1124:	e9 77 ff ff ff       	jmp    10a0 <register
    111d:	ff d2                	call   edx	      |
    111f:	83 c4 10             	add    esp,0x10	      |	0000000000001129 <main>:
    1122:	8b 5d fc             	mov    ebx,DWORD PTR  |	    1129:	f3 0f 1e fa          	endbr64 
    1125:	c9                   	leave  		      |	    112d:	55                   	push   rbp
    1126:	c3                   	ret    		      |	    112e:	48 89 e5             	mov    rbp,rsp
    1127:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1 |	    1131:	b8 78 56 34 12       	mov    eax,0x12345678
    112e:	66 90                	xchg   ax,ax	      |	    1136:	5d                   	pop    rbp
							      |	    1137:	c3                   	ret    
00001130 <__do_global_dtors_aux>:			      <
    1130:	f3 0f 1e fb          	endbr32 	      <
    1134:	55                   	push   ebp	      <
    1135:	89 e5                	mov    ebp,esp	      <
    1137:	53                   	push   ebx	      <
    1138:	e8 53 ff ff ff       	call   1090 <__x86.ge <
    113d:	81 c3 9f 2e 00 00    	add    ebx,0x2e9f     <
    1143:	83 ec 04             	sub    esp,0x4	      <
    1146:	80 bb 2c 00 00 00 00 	cmp    BYTE PTR [ebx+ <
    114d:	75 27                	jne    1176 <__do_glo <
    114f:	8b 83 14 00 00 00    	mov    eax,DWORD PTR  <
    1155:	85 c0                	test   eax,eax	      <
    1157:	74 11                	je     116a <__do_glo <
    1159:	83 ec 0c             	sub    esp,0xc	      <
    115c:	ff b3 28 00 00 00    	push   DWORD PTR [ebx <
    1162:	e8 e9 fe ff ff       	call   1050 <__cxa_fi <
    1167:	83 c4 10             	add    esp,0x10	      <
    116a:	e8 31 ff ff ff       	call   10a0 <deregist <
    116f:	c6 83 2c 00 00 00 01 	mov    BYTE PTR [ebx+ <
    1176:	8b 5d fc             	mov    ebx,DWORD PTR  <
    1179:	c9                   	leave  		      <
    117a:	c3                   	ret    		      <
    117b:	8d 74 26 00          	lea    esi,[esi+eiz*1 <
    117f:	90                   	nop		      <
							      <
00001180 <frame_dummy>:					      <
    1180:	f3 0f 1e fb          	endbr32 	      <
    1184:	e9 57 ff ff ff       	jmp    10e0 <register <
							      <
00001189 <__x86.get_pc_thunk.dx>:			      <
    1189:	8b 14 24             	mov    edx,DWORD PTR  <
    118c:	c3                   	ret    		      <
							      <
0000118d <main>:					      <
    118d:	55                   	push   ebp	      <
    118e:	89 e5                	mov    ebp,esp	      <
    1190:	e8 0c 00 00 00       	call   11a1 <__x86.ge <
    1195:	05 47 2e 00 00       	add    eax,0x2e47     <
    119a:	b8 78 56 34 12       	mov    eax,0x12345678 <
    119f:	5d                   	pop    ebp	      <
    11a0:	c3                   	ret    		      <
							      <
000011a1 <__x86.get_pc_thunk.ax>:			      <
    11a1:	8b 04 24             	mov    eax,DWORD PTR  <
    11a4:	c3                   	ret    		      <

Disassembly of section .fini:					Disassembly of section .fini:

000011a8 <_fini>:					      |	0000000000001138 <_fini>:
    11a8:	f3 0f 1e fb          	endbr32 	      |	    1138:	f3 0f 1e fa          	endbr64 
    11ac:	53                   	push   ebx	      |	    113c:	48 83 ec 08          	sub    rsp,0x8
    11ad:	83 ec 08             	sub    esp,0x8	      |	    1140:	48 83 c4 08          	add    rsp,0x8
    11b0:	e8 db fe ff ff       	call   1090 <__x86.ge |	    1144:	c3                   	ret    
    11b5:	81 c3 27 2e 00 00    	add    ebx,0x2e27     <
    11bb:	83 c4 08             	add    esp,0x8	      <
    11be:	5b                   	pop    ebx	      <
    11bf:	c3                   	ret    		      <
